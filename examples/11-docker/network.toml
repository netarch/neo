[[nodes]]
    name = "h1"
    type = "generic"
    [[nodes.interfaces]]
    name = "eth0"
    ipv4 = "9.0.0.1/8"
    [[nodes.static_routes]]
    network = "10.0.0.0/8"
    next_hop = "9.0.1.1"
[[nodes]]
    name = "h2"
    type = "generic"
    [[nodes.interfaces]]
    name = "eth0"
    ipv4 = "9.0.0.2/8"
    [[nodes.static_routes]]
    network = "10.0.0.0/8"
    next_hop = "9.0.1.1"
[[nodes]]
    name = "s1"
    type = "generic"
    [[nodes.interfaces]]
    name = "eth0"
    [[nodes.interfaces]]
    name = "eth1"
    [[nodes.interfaces]]
    name = "eth2"
[[nodes]]
    name = "r1"
    type = "generic"
    [[nodes.interfaces]]
    name = "eth0"
    ipv4 = "9.0.1.1/8"
    [[nodes.interfaces]]
    name = "eth1"
    ipv4 = "10.0.1.1/24"
    [[nodes.static_routes]]
    network = "10.0.0.0/8"
    next_hop = "10.0.1.2"
# use transparent proxy here
# the intercept router is combined into the squid proxy, and the intercept
# functionality should be enabled to route the packet and change the dest
# address
# 1. kernel functionality for forwarding the packet: net.ipv4.ip_forward = 1(should be defaultly true)
# 2. add redirect packet to squid server:
#   iptables -t nat -A PERROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 9999
[[nodes]]
    name = "proxy"
    type = "middlebox"
    env = "docker_netns"
    app = "docker"
    container_name = "test"
    image   = "hashicorp/http-echo"
    command = [
        "-text=\"hello world\"",
        "-listen=:8080"
    ]
    # not sure why we need config here
    [[nodes.interfaces]]
    name = "eth0"
    ipv4 = "10.0.1.2/24"
    [[nodes.interfaces]]
    name = "eth1"
    ipv4 = "10.0.2.1/24"
    [[nodes.static_routes]]
    network = "10.0.3.0/24"
    next_hop = "10.0.2.2"
    [[nodes.static_routes]]
    network = "0.0.0.0/0"
    next_hop = "10.0.1.1"
[[nodes]]
    name = "r2"
    type = "generic"
    [[nodes.interfaces]]
    name = "eth0"
    ipv4 = "10.0.2.2/24"
    [[nodes.interfaces]]
    name = "eth1"
    ipv4 = "10.0.3.2/24"
    [[nodes.static_routes]]
    network = "0.0.0.0/0"
    next_hop = "10.0.2.1"
[[nodes]]
    name = "server"
    type = "generic"
    [[nodes.interfaces]]
    name = "eth0"
    ipv4 = "10.0.3.1/24"
    [[nodes.static_routes]]
    network = "0.0.0.0/0"
    next_hop = "10.0.3.2"

[[links]]
    node1 = "server"
    intf1 = "eth0"
    node2 = "r2"
    intf2 = "eth1"
[[links]]
    node1 = "r2"
    intf1 = "eth0"
    node2 = "proxy"
    intf2 = "eth1"
[[links]]
    node1 = "proxy"
    intf1 = "eth0"
    node2 = "r1"
    intf2 = "eth1"
[[links]]
    node1 = "r1"
    intf1 = "eth0"
    node2 = "s1"
    intf2 = "eth0"
[[links]]
    node1 = "s1"
    intf1 = "eth1"
    node2 = "h1"
    intf2 = "eth0"
[[links]]
    node1 = "s1"
    intf1 = "eth2"
    node2 = "h2"
    intf2 = "eth0"

# Policy:
#   1. Requested host should always be hit in cache among the proxies

[[policies]]
    type = "reachability"
    target_node = "server"
#     reachable = false
#     [[policies.connections]]
#     protocol = "tcp"
#     src_node = "h[12]"
#     dst_ip = "10.0.1.2"
#     dst_port = 80
# [[policies]]
#     type = "reachability"
#     target_node = "proxy"
    reachable = true
    [[policies.connections]]
    protocol = "tcp"
    src_node = "h1"
    dst_ip = "10.0.1.2"
    dst_port = 80
# [[policies]]
#     type = "one-request"
#     target_node = "<node name regex>"
#     [[policies.connections]]
#     # < connection spec >
